Starting
Wed Apr 12 15:43:10 EDT 2023
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
Number of images per class in the training dataset:
Class Tomato___Tomato_mosaic_virus: 1790
Class Tomato___Leaf_Mold: 1882
Class Tomato___healthy: 1926
Class Tomato___Spider_mites_Two-spotted_spider_mite: 1741
Class Tomato___Septoria_leaf_spot: 1745
Class Tomato___Early_blight: 1920
Class Tomato___Target_Spot: 1827
Class Tomato___Late_blight: 1851
Class Tomato___Tomato_Yellow_Leaf_Curl_Virus: 1961
Class Tomato___Bacterial_spot: 1702
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 1/10 - Loss: 1.6497 Acc: 0.3961
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 1.6700 Acc: 0.4386 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[263, 5, 31, 68, 38, 0, 0, 4, 1, 15]
[10, 72, 31, 157, 54, 59, 36, 7, 21, 33]
[17, 48, 88, 38, 114, 31, 16, 4, 15, 92]
[0, 3, 2, 70, 260, 2, 7, 0, 110, 16]
[1, 2, 0, 5, 347, 0, 9, 1, 58, 13]
[0, 4, 2, 23, 31, 116, 85, 2, 112, 60]
[0, 1, 0, 26, 24, 5, 120, 0, 47, 234]
[3, 14, 3, 109, 67, 50, 2, 228, 14, 0]
[0, 0, 0, 2, 114, 0, 1, 0, 237, 94]
[2, 0, 3, 2, 3, 0, 1, 0, 0, 470]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 2/10 - Loss: 0.7963 Acc: 0.7195
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.6508 Acc: 0.7716 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[358, 1, 11, 5, 9, 1, 2, 38, 0, 0]
[59, 165, 51, 18, 42, 7, 30, 108, 0, 0]
[18, 48, 278, 10, 54, 2, 1, 49, 2, 1]
[0, 1, 8, 379, 68, 3, 0, 9, 2, 0]
[0, 0, 1, 38, 370, 9, 5, 1, 12, 0]
[1, 6, 2, 24, 2, 296, 50, 47, 7, 0]
[3, 8, 1, 18, 9, 27, 378, 1, 9, 3]
[2, 0, 2, 2, 6, 0, 0, 478, 0, 0]
[0, 0, 0, 0, 30, 0, 1, 0, 417, 0]
[3, 0, 4, 1, 4, 3, 47, 0, 0, 419]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 3/10 - Loss: 0.5063 Acc: 0.8241
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.3582 Acc: 0.8737 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[382, 3, 14, 0, 2, 3, 1, 19, 0, 1]
[21, 298, 55, 9, 37, 5, 28, 22, 5, 0]
[6, 28, 388, 6, 19, 2, 3, 8, 2, 1]
[1, 1, 2, 397, 55, 7, 1, 3, 3, 0]
[1, 0, 5, 5, 410, 1, 2, 1, 11, 0]
[0, 1, 1, 7, 9, 399, 3, 3, 12, 0]
[3, 2, 1, 2, 14, 42, 352, 0, 22, 19]
[7, 1, 3, 2, 0, 4, 0, 472, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 447, 1]
[0, 0, 3, 1, 1, 3, 8, 2, 2, 461]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 4/10 - Loss: 0.3767 Acc: 0.8686
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.2787 Acc: 0.9025 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[406, 0, 7, 0, 5, 1, 1, 1, 0, 4]
[55, 333, 36, 8, 13, 1, 17, 15, 1, 1]
[10, 20, 414, 1, 4, 0, 3, 2, 0, 9]
[0, 3, 6, 417, 33, 5, 1, 2, 3, 0]
[0, 5, 5, 13, 390, 3, 3, 0, 15, 2]
[0, 2, 1, 1, 1, 422, 2, 3, 3, 0]
[3, 2, 0, 0, 2, 56, 384, 1, 6, 3]
[7, 0, 2, 1, 0, 6, 0, 474, 0, 0]
[0, 0, 0, 0, 0, 0, 8, 0, 438, 2]
[0, 0, 0, 0, 0, 1, 20, 0, 0, 460]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 5/10 - Loss: 0.3080 Acc: 0.8951
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.2722 Acc: 0.9058 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[407, 5, 3, 0, 0, 1, 2, 7, 0, 0]
[12, 393, 37, 3, 13, 2, 6, 14, 0, 0]
[5, 8, 434, 1, 0, 1, 1, 8, 0, 5]
[1, 1, 1, 462, 2, 1, 0, 1, 1, 0]
[4, 6, 25, 43, 344, 9, 1, 4, 0, 0]
[3, 0, 0, 7, 0, 416, 5, 2, 1, 1]
[13, 6, 2, 4, 7, 43, 347, 0, 1, 34]
[7, 1, 1, 1, 0, 2, 0, 478, 0, 0]
[0, 0, 0, 3, 11, 0, 1, 0, 395, 38]
[0, 0, 0, 1, 0, 0, 3, 0, 0, 477]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 6/10 - Loss: 0.2541 Acc: 0.9126
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.2182 Acc: 0.9245 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[412, 1, 4, 0, 0, 0, 1, 7, 0, 0]
[14, 403, 47, 0, 2, 1, 7, 5, 1, 0]
[1, 8, 451, 1, 1, 0, 0, 0, 0, 1]
[3, 5, 7, 440, 1, 9, 0, 5, 0, 0]
[2, 5, 9, 12, 399, 3, 2, 4, 0, 0]
[1, 1, 1, 1, 0, 426, 3, 2, 0, 0]
[3, 2, 3, 1, 4, 62, 359, 1, 1, 21]
[1, 1, 1, 0, 0, 3, 0, 484, 0, 0]
[0, 0, 1, 13, 4, 0, 9, 0, 400, 21]
[0, 0, 5, 0, 0, 1, 10, 0, 0, 465]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 7/10 - Loss: 0.2200 Acc: 0.9239
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.1657 Acc: 0.9426 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[419, 1, 0, 0, 1, 0, 1, 3, 0, 0]
[11, 447, 7, 4, 6, 0, 2, 2, 1, 0]
[5, 23, 424, 0, 7, 0, 0, 1, 0, 3]
[0, 1, 2, 449, 12, 3, 1, 1, 1, 0]
[1, 3, 1, 4, 419, 1, 1, 1, 5, 0]
[0, 2, 0, 1, 1, 361, 61, 1, 3, 5]
[0, 7, 0, 0, 3, 4, 423, 0, 5, 15]
[5, 1, 4, 5, 0, 5, 1, 469, 0, 0]
[0, 0, 0, 1, 10, 1, 0, 0, 436, 0]
[2, 0, 2, 0, 0, 0, 2, 0, 0, 475]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 8/10 - Loss: 0.1830 Acc: 0.9358
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.1338 Acc: 0.9546 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[405, 7, 4, 0, 1, 0, 5, 3, 0, 0]
[1, 437, 22, 1, 2, 3, 12, 1, 1, 0]
[1, 10, 444, 0, 5, 0, 1, 0, 0, 2]
[0, 3, 1, 439, 18, 6, 0, 2, 1, 0]
[0, 3, 1, 0, 428, 0, 4, 0, 0, 0]
[0, 0, 0, 1, 0, 421, 10, 1, 2, 0]
[0, 0, 0, 0, 1, 27, 420, 1, 4, 4]
[7, 0, 4, 2, 1, 2, 0, 474, 0, 0]
[0, 0, 0, 0, 0, 0, 6, 0, 442, 0]
[0, 0, 2, 0, 0, 1, 11, 0, 0, 467]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 9/10 - Loss: 0.1785 Acc: 0.9403
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.1874 Acc: 0.9365 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[416, 3, 2, 0, 0, 0, 1, 2, 0, 1]
[5, 423, 26, 0, 6, 8, 8, 1, 2, 1]
[0, 14, 439, 0, 3, 1, 5, 0, 0, 1]
[0, 1, 4, 401, 48, 11, 2, 0, 3, 0]
[1, 6, 1, 0, 412, 0, 2, 1, 13, 0]
[0, 0, 1, 0, 0, 407, 26, 0, 1, 0]
[0, 1, 1, 0, 4, 10, 430, 0, 7, 4]
[5, 5, 3, 1, 0, 22, 1, 453, 0, 0]
[0, 0, 0, 1, 2, 0, 2, 0, 443, 0]
[2, 0, 2, 1, 0, 0, 6, 0, 0, 470]
/home/tnchau/Tomato_Disease/MobileNetV2.py:126: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  conf_matrix = np.zeros((num_classes, num_classes), dtype=np.int)
Epoch 10/10 - Loss: 0.1531 Acc: 0.9476
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/lib/function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/home/tnchau/.conda/envs/disease_detection/lib/python3.10/site-packages/numpy/core/_methods.py:190: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Validation - Loss: 0.1162 Acc: 0.9601 Precision: nan Recall: nan F1: nan
Confusion Matrix:
[412, 7, 0, 0, 0, 0, 0, 6, 0, 0]
[1, 464, 7, 0, 0, 0, 7, 0, 1, 0]
[2, 18, 441, 1, 0, 0, 0, 0, 0, 1]
[1, 2, 2, 458, 3, 4, 0, 0, 0, 0]
[1, 12, 7, 8, 406, 0, 1, 1, 0, 0]
[1, 1, 0, 1, 0, 426, 4, 1, 1, 0]
[11, 2, 2, 2, 2, 36, 401, 0, 1, 0]
[0, 1, 1, 0, 0, 2, 0, 486, 0, 0]
[0, 0, 0, 0, 2, 1, 2, 0, 441, 2]
[0, 0, 2, 0, 0, 1, 9, 2, 0, 467]

real	144m20.160s
user	3332m18.684s
sys	101m8.476s
Finished
Wed Apr 12 18:07:30 EDT 2023
